#pragma checksum "C:\Users\thomsonsj\apps\ge_app\Views\ShallowFoundations\DrainedBearingEC7.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e08066d6fdb470ccb5c37ce5dd6c48e81af948eb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ShallowFoundations_DrainedBearingEC7), @"mvc.1.0.view", @"/Views/ShallowFoundations/DrainedBearingEC7.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ShallowFoundations/DrainedBearingEC7.cshtml", typeof(AspNetCore.Views_ShallowFoundations_DrainedBearingEC7))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\thomsonsj\apps\ge_app\Views\_ViewImports.cshtml"
using ge_app;

#line default
#line hidden
#line 2 "C:\Users\thomsonsj\apps\ge_app\Views\_ViewImports.cshtml"
using ge_app.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e08066d6fdb470ccb5c37ce5dd6c48e81af948eb", @"/Views/ShallowFoundations/DrainedBearingEC7.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a2085f25f2ee1003de86d2144c6e47df98778b6d", @"/Views/_ViewImports.cshtml")]
    public class Views_ShallowFoundations_DrainedBearingEC7 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ge_app.Models.ProcessModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(37, 6, true);
            WriteLiteral("    \r\n");
            EndContext();
#line 4 "C:\Users\thomsonsj\apps\ge_app\Views\ShallowFoundations\DrainedBearingEC7.cshtml"
  
    ViewData["Title"] = "Drained Bearing EC7";

#line default
#line hidden
            BeginContext(98, 9635, true);
            WriteLiteral(@"
 <div class=""container"">
 <!-- Content here -->
  <h2>Drained Bearing Resistance Calculation</h2>
  <p>(BS EN 1997-1:2004+A1:2013 Annex D (informative))</p>
  
  <div class=""row"">
    <div class=""col-sm-6""> 
      <div class=""form-group"" id=""fg_Breadth"">
        <label for=""Breadth"">Breadth</label>
        <input type=""text"" class=""form-control"" id=""Breadth"" placeholder=""...foundation breadth (m)"" >
        <!-- <p class=""help-block"">effective breadth of the footing</p> -->
      </div>
      <div class=""form-group"" id=""fg_Length"">
        <label for=""Length"">Length</label>
        <input type=""text"" class=""form-control"" id=""Length"" placeholder=""...foundation length (m)"">
        <!-- <p class=""help-block"">effective length of the footing</p> -->
      </div>
    </div>
    <div class=""col-sm-6""> 
      <div class=""form-group"" id=""fg_effArea"">
        <label for=""Area"">Area</label>
        <input type=""text"" class=""form-control"" id=""Area"" placeholder=""...foundation area"">
        <!-- <");
            WriteLiteral(@"p class=""help-block"">effective area of the footing (Length x Breadth)</p> -->
      </div>
      <div class=""form-group"" id=""fg_HLoad"">
        <label for=""HLoad"">Horizontal Load</label>
        <input type=""text"" class=""form-control"" id=""HLoad"" placeholder=""...horizontal load"">
        <!-- <p class=""help-block"">applied horizontal load</p> -->
      </div>
    </div>
  </div>
  <div class=""row"">
      <div class=""col-sm-6"">   
        <div class=""form-group"" id=""fg_VLoad"">
          <label for=""VLoad"">Vertical Load</label>
          <input type=""text"" class=""form-control"" id=""VLoad"" placeholder=""...vertical load"">
          <!-- <p class=""help-block"">applied vertical loading</p> -->
        </div>
        <div class=""form-group"" id=""fg_cohesion"">
          <label for=""cohesion"">Cohesion</label>
          <input type=""text"" class=""form-control"" id=""cohesion"" placeholder=""...cohesion"">
          <!-- <p class=""help-block"">surcharge at base of footing</p> -->
        </div>
      </div>
  ");
            WriteLiteral(@"    <div class=""col-sm-6""> 
        <div class=""form-group"" id =""fg_Htheta_deg"">
          <label for=""Htheta_deg"">Angle of horizontal load in plan</label>
          <input type=""text"" class=""form-control"" id=""Htheta_deg"" placeholder=""...htheta (in degrees)"">
          <!-- <p class=""help-block"">angle of horizontal load in plan</p> -->
        </div>
        <div class=""form-group"" id=""fg_phi_deg"">
          <label for=""phi_deg"">Friction angle</label>
          <input type=""text"" class=""form-control"" id=""phi_deg"" placeholder=""...phi (in degrees)"">
          <!-- <p class=""help-block"">friction angle of bearing material</p> -->
        </div>
      </div>
    </div>
    <div class=""row"">
      <div class=""col-sm-6""> 
        <div class=""form-group"" id = ""fg_alpha_deg"">
          <label for=""alpha_deg"">Angle of inclination of base of foundation</label>
          <input type=""text"" class=""form-control"" id=""alpha_deg"" placeholder=""...alpha (degrees)"">
          <!-- <p class=""help-block"">alpha an");
            WriteLiteral(@"gle in degrees</p> -->
        </div>
        <div class=""form-group"" id = ""fg_surcharge"">
          <label for=""surcharge"">Effective pressure</label>
          <input type=""text"" class=""form-control"" id=""surcharge"" placeholder=""...effective pressure at formation level"">
          <!-- <p class=""help-block"">surcharge at base of footing</p> -->
        </div>
      </div>
      <div class=""col-sm-6""> 
        <div class=""form-group"" id =""fg_density"" >
          <label for=""density"">Effective density of soil</label>
          <input type=""text"" class=""form-control"" id=""density"" placeholder=""...effective density of soil"">
          <!-- <p class=""help-block"">density of bearing soil</p> -->
        </div>
      </div>
    </div>
    
    <table class=""table table-striped"">
      <thead>
        <tr>
          <th scope=""col"">Factor</th>
          <th scope=""col"">q cohesion</th>
          <th scope=""col""></th>
          <th scope=""col"">q sucharge</th>
          <th scope=""col""></th>
      ");
            WriteLiteral(@"    <th scope=""col"">q density</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th scope=""row"">Resistance Factor</th>
          <td>Nc</td>
          <td id=""nc""></td>
          <td>Nq</td>
          <td id=""nq""></td>
          <td>Ng</td>
          <td id=""ng""></td>
        </tr>
        <tr>
          <th scope=""row"">Base inclination Factor</th>
          <td>bc</td>
          <td id=""bc""></td>
          <td>bq</td>
          <td id=""bq""></td> 
          <td>bg</td>
          <td id=""bg""></td> 
        </tr>
        <tr>
          <th scope=""row"">Shape Factor</th>
          <td>sc</td>
          <td id=""sc""></td>
          <td>sq</td>
          <td id=""sq""></td> 
          <td>sg</td>
          <td id=""sg""></td> 
        </tr>
        <tr>
          <th scope=""row"">Load inclination Factor</th>
          <td>ic</td>
          <td id=""ic""></td>
          <td>iq</td>
          <td id=""iq""></td> 
          <td>ig</td>
          <td id=""ig""></td> 
    ");
            WriteLiteral(@"    </tr>
        <tr>
          <th scope=""row"">Resistance</th>
          <td>q_nc</td>
          <td id=""q_nc""></td>
          <td>q_nq</td>
          <td id=""q_nq""></td> 
          <td>q_ng</td>
          <td id=""q_ng""></td> 
        </tr>
      </tbody>
    </table>
    <div class=""form-group"" id =""fg_result"" >
    <label for=""result"">D.4 Drained Conditions (eq D.2)</label>
    <input type=""text"" class=""form-control"" id=""result"" placeholder=""...result drained resistance"">
    </div>
    <div class=""form-group"" id =""fg_response"" >
      <label for=""response"">D.4 Drained Conditions (intermediate results eq D.2)</label>
      <textarea id=""response"" class = ""form-control"" name=""response"" placeholder=""...intermediate results drained resistance"" rows=""4"" cols=""50""> </textarea>
    </div>
    <div class=""form-group"" id =""fg_report"" >
      <label for=""result"">D.4 Drained Conditions (eq D.2) Report</label>
      <textarea id=""report"" class = ""form-control"" name=""report"" placeholder=""...repo");
            WriteLiteral(@"rt formated results"" rows=""4"" cols=""50""> </textarea>
     </div>
    <button  onclick=""calc()"" class=""btn btn-primary"">Calculate</button>
    <button  onclick=""populate(3,6,18,10,28,30,20,100,50,90,0)"" class=""btn btn-primary"">Test</button>
    
  </div>
 <script type=""text/javascript"" >
    var resps = [];
    function calc() { 
          
          // var host = ""https://ge-app.azurewebsites.net/api"";
          // var host = ""http://localhost:3000/api"";
          
          var Breadth =  $(""#Breadth"").val();
          var Length =  $(""#Length"").val();
          var Area =  $(""#Area"").val();
          var HLoad =  $(""#HLoad"");
          var VLoad =  $(""#VLoad"");
          var cohesion = $(""#cohesion"");
          var phi_rad =  radians($(""#phi_deg"").val());
          var Htheta_rad =  radians($(""#Htheta_deg"").val());
          var alpha_rad =  radians($(""#alpha_deg"").val());
          var surcharge =  $(""#surcharge"").val();
          var density =  $(""#density"").val();
          
    ");
            WriteLiteral(@"      var url = host + `/EC7_Bearing/calc_EC7_D2?breadth=${Breadth}&length=${Length}&area=${Area}&hload=${HLoad}&vload=${VLoad}&cohesion=${cohesion}&phi_rad=${phi_rad}&htheta_rad=${Htheta_rad}&alpha_rad=${alpha_rad}&surcharge=${surcharge}&density=${density}&report='latex'`
          
          httpGetAsync(url, display_result)
        
        }
        
      function display_result(response) {
          $(""#response"").html(response)
          
          var resps = JSON.parse(response);
          var resp = resps.data[0];

            $('#nc').html(resp[""nc""]);
            $('#bc').html(resp[""bc""]);  
            $('#sc').html(resp[""sc""]); 
            $('#ic').html(resp[""ic""]);
            $('#q_nc').html(resp[""q_nc""]);

            $('#nq').html(resp[""nq""]);
            $('#bq').html(resp[""bq""]);  
            $('#sq').html(resp[""sq""]);
            $('#iq').html(resp[""iq""]);
            $('#q_nq').html(resp[""q_nq""]);
            
            $('#ng').html(resp[""ng""]);
            ");
            WriteLiteral(@"$('#bg').html(resp[""bg""]); 
            $('#sg').html(resp[""sg""]); 
            $('#ig').html(resp[""ig""]);
            $('#q_ng').html(resp[""q_ng""]);
            
            $(""#result"").val(resp[""q_ult""]);

      }
    function populate(Breadth, Length, Area, cohesion, phi_deg, surcharge, density, HLoad, VLoad, Htheta_deg, alpha_deg) {
        
         $(""#Breadth"").val(Breadth);
         $(""#Length"").val(Length);
         $(""#Area"").val(Area);
         $(""#HLoad"").val(HLoad);
         $(""#VLoad"").val(VLoad);
         $(""#cohesion"").val(cohesion);
         $(""#phi_deg"").val(phi_deg);
         $(""#Htheta_deg"").val(Htheta_deg);
         $(""#alpha_deg"").val(alpha_deg);
         $(""#surcharge"").val(surcharge);
         $(""#density"").val(density);
       

        //reset results 
        $(""#result"").val("""");
        $(""#response"").html("""")
        
        $(""#nc"").html( """")
        $(""#bc"").html( """") 
        $(""#sc"").html( """")
        $(""#ic"").html( """")
        $(""#q_nc"").html");
            WriteLiteral(@"( """")
        
        $(""#nq"").html( """")
        $(""#bq"").html( """") 
        $(""#sq"").html( """")   
        $(""#iq"").html( """")  
        $(""#q_nq"").html( """")
        
        $(""ng"").html( """")  
        $(""#bg"").html( """")
        $(""#sg"").html( """") 
        $(""#ig"").html( """")
        $(""#q_ng"").html( """")
            
      
      
      
      
       
      
      
       
    }

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ge_app.Models.ProcessModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
